{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.scss","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/movie-detail/movie-detail.component.html","webpack:///./src/app/movie-detail/movie-detail.component.scss","webpack:///./src/app/movie-detail/movie-detail.component.ts","webpack:///./src/app/movie-list-tile/movie-list-tile.component.html","webpack:///./src/app/movie-list-tile/movie-list-tile.component.scss","webpack:///./src/app/movie-list-tile/movie-list-tile.component.ts","webpack:///./src/app/movie-search/movie-search.component.html","webpack:///./src/app/movie-search/movie-search.component.scss","webpack:///./src/app/movie-search/movie-search.component.ts","webpack:///./src/app/movies-list/movies-list.component.html","webpack:///./src/app/movies-list/movies-list.component.scss","webpack:///./src/app/movies-list/movies-list.component.ts","webpack:///./src/config/movie-lists.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/movie.model.ts","webpack:///./src/services/logic.service.ts","webpack:///./src/services/movies.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACsB;AACH;AACG;AAE7E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,yFAAoB;KAChC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,yFAAoB;KAChC;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,yFAAoB;KAChC;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7B7B,0C;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,aAAa,CAAC;IACxB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;ACPgB;AACoB;AACH;AAY/B;AA8B3B;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QA5B7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,+DAAa;gBACb,oEAAkB;gBAClB,0EAAgB;gBAChB,mEAAiB;gBACjB,gEAAc;gBACd,uEAAe;aAChB;YACD,OAAO,EAAE;gBACP,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,+DAAa;gBACb,oEAAkB;gBAClB,0EAAgB;gBAChB,mEAAiB;gBACjB,gEAAc;gBACd,uEAAe;aAChB;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5C4B;AACA;AACqB;AACtC;AACe;AACU;AACR;AAEF;AACT;AAC2B;AACW;AAC3B;AACmB;AACvB;AACuB;AA2B7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,uFAAmB;gBACnB,kGAAsB;gBACtB,0FAAoB;gBACpB,mEAAa;gBACb,0FAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,oEAAgB;gBAChB,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,uEAAe;gBACf,uEAAiB;aAClB;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,qEAAW,CAAC,MAAM,EAAE;gBACnD,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,qEAAW,CAAC,SAAS,EAAE;aAC1D;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1CtB,ylBAAylB,gBAAgB,wDAAwD,eAAe,mCAAmC,sBAAsB,qN;;;;;;;;;;;ACAzuB,6BAA6B,iBAAiB,EAAE,oBAAoB,oBAAoB,EAAE,+CAA+C,mc;;;;;;;;;;;;;;;;;ACAvF;AAOlD;IAEE;QAEA,cAAS,GAAU;YACjB;gBACE,WAAW,EAAE,MAAM;gBACnB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,MAAM;aACb;YACD;gBACE,WAAW,EAAE,gBAAgB;gBAC7B,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,cAAc;aACrB;SACF,CAAC;IAbc,CAAC;IAejB,gCAAQ,GAAR;IACA,CAAC;IAlBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;;OACW,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;ACP1B,2RAA2R,cAAc,iKAAiK,oBAAoB,4EAA4E,iBAAiB,wN;;;;;;;;;;;ACA3jB,iCAAiC,+JAA+J,2BAA2B,EAAE,iBAAiB,kBAAkB,EAAE,yBAAyB,iBAAiB,kBAAkB,qBAAqB,oBAAoB,qBAAqB,iBAAiB,EAAE,+CAA+C,2+B;;;;;;;;;;;;;;;;;;;ACA5Y;AACO;AAEC;AAQ1D;IAEE,8BACU,KAAqB,EACrB,YAA0B;QAD1B,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAML,uCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE5D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC3D,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAIiB,8DAAc;YACP,uEAAY;OAJzB,oBAAoB,CAmBhC;IAAD,2BAAC;CAAA;AAnBgC;;;;;;;;;;;;ACXjC,sJAAsJ,6BAA6B,yEAAyE,gCAAgC,iEAAiE,4BAA4B,gNAAgN,UAAU,wD;;;;;;;;;;;ACAnlB,iCAAiC,+JAA+J,2BAA2B,EAAE,iBAAiB,kBAAkB,iBAAiB,iBAAiB,gBAAgB,EAAE,qBAAqB,iBAAiB,EAAE,+CAA+C,+5B;;;;;;;;;;;;;;;;;;ACAlV;AACV;AAO/C;IAEE;IAAgB,CAAC;IAIjB,yCAAQ,GAAR;IACA,CAAC;IAED,4CAAW,GAAX,UAAY,KAAa;QAEvB,IAAI,KAAK,EAAE;YACT,OAAO,kCAAkC,GAAG,KAAK,CAAC;SACnD;QAED,4CAA4C;QAC5C,OAAO,iIAAiI,CAAC;IAC3I,CAAC;IAED,2CAAU,GAAV,UAAW,QAAgB,EAAE,SAAiB;QAE5C,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,SAAS,EAAE;YACd,SAAS,GAAG,GAAG,CAAC;SACjB;QAED,IAAI,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE;YAC/B,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC;SAC9C;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IA9BQ;QAAR,2DAAK,EAAE;wEAAQ,4DAAK;yDAAC;IAJX,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iIAA+C;;SAEhD,CAAC;;OACW,sBAAsB,CAmClC;IAAD,6BAAC;CAAA;AAnCkC;;;;;;;;;;;;ACRnC,gvC;;;;;;;;;;;ACAA,qCAAqC,uBAAuB,EAAE,kBAAkB,eAAe,EAAE,iBAAiB,eAAe,iBAAiB,EAAE,+CAA+C,mlB;;;;;;;;;;;;;;;;;;ACAjJ;AACQ;AAS1D;IAEE,8BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAI9C,gBAAW,GAAG,KAAK,CAAC;IAJ8B,CAAC;IAMnD,uCAAQ,GAAR;IACA,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAcC;QAbC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC3D,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;aACjC;iBAAM;gBACL,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,QAAQ;YACtD,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IApCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAGkC,uEAAY;OAFnC,oBAAoB,CAsChC;IAAD,2BAAC;CAAA;AAtCgC;;;;;;;;;;;;ACVjC,4M;;;;;;;;;;;ACAA,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAb;AAGQ;AACT;AAOjD;IAEE,6BACU,KAAqB,EACrB,YAA0B;QAD1B,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAIL,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE/D,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAClE,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAfU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAIiB,8DAAc;YACP,uEAAY;OAJzB,mBAAmB,CAgB/B;IAAD,0BAAC;CAAA;AAhB+B;;;;;;;;;;;;;ACXhC;AAAA;AAAA,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,iCAAmB;IACnB,qCAAuB;AAC3B,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;;;;;;;;;;;;ACHD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,2CAA2C;IACnD,SAAS,EAAE,6BAA6B;CACzC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACN0C;AAEM;AACA;AACE;AAKnD;IAEI,sBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAChD,CAAC;IAED,sCAAe,GAAf,UAAgB,QAAgB;QAC5B,IAAM,QAAQ,GAAG,8DAAU,CAAC,QAAQ,CAAC,CAAC;QAEtC,QAAQ,QAAQ,EAAE;YACd,KAAK,8DAAU,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAEnC;gBACI,OAAO,IAAI,CAAC;SACnB;IACL,CAAC;IAED,qBAAqB;IACrB,6BAAM,GAAN,UAAO,UAAkB;QACrB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAEzC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,kBAAQ;YACR,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,uCAAuC;IACvC,uCAAgB,GAAhB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAC7C,0DAAG,CAAC,kBAAQ;YACR,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,2BAA2B;IAC3B,+BAAQ,GAAR,UAAS,EAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAC,kBAAQ;YACR,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,+BAA+B;IAC/B,iCAAU,GAAV,UAAW,UAAkB;QACzB,IAAM,SAAS,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC;QAEjD,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC3D,UAAU,GAAG,OAAO,CAAC,CAAC,mDAAmD;SAC5E;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAvDQ,YAAY;QAHxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAGqC,6DAAa;OAFvC,YAAY,CAwDxB;IAAD,mBAAC;CAAA;AAxDwB;;;;;;;;;;;;;;;;;;;;ACTyB;AACC;AAEF;AAQjD;IAKI,oGAAoG;IACpG,wCAAwC;IACxC,uBACY,IAAgB,EACH,SAAiB,EACpB,MAAc;QAFxB,SAAI,GAAJ,IAAI,CAAY;QAIxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,8FAA8F;IAC9F,oCAAY,GAAZ,UAAa,UAAkB;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QAElG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,KAAK,CAAC;aAC3C,IAAI,CACD,0DAAG,CAAC,kBAAQ;YACR,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,EACF,iEAAU,CAAC,eAAK;YACZ,MAAM,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CACL,CAAC;IACV,CAAC;IAED,6HAA6H;IAC7H,wCAAgB,GAAhB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC;QAEnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,KAAK,CAAC;aAC3C,IAAI,CACD,0DAAG,CAAC,kBAAQ;YACR,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,EACF,iEAAU,CAAC,eAAK;YACZ,MAAM,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CACL,CAAC;IACV,CAAC;IAED,+FAA+F;IAC/F,gCAAQ,GAAR,UAAS,EAAU;QACf,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,KAAK,CAAC;aAC7B,IAAI,CACD,0DAAG,CAAC,UAAC,QAAe;YAChB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,EACF,iEAAU,CAAC,eAAK;YACZ,MAAM,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CACL,CAAC;IACV,CAAC;IA3DQ,aAAa;QAHzB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;QAUO,6GAAM,CAAC,WAAW,CAAC;QACnB,6GAAM,CAAC,QAAQ,CAAC;+EAFH,+DAAU;OARnB,aAAa,CA4DzB;IAAD,oBAAC;CAAA;AA5DyB","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { MovieSearchComponent } from './movie-search/movie-search.component';\n\nconst routes: Routes = [\n  {\n    path: 'search',\n    component: MovieSearchComponent\n  },\n  {\n    path: 'movies/:list',\n    component: MoviesListComponent\n  },\n  {\n    path: 'movie/detail/:movieId',\n    component: MovieDetailComponent\n  },\n  {\n    path: '**',\n    component: MovieSearchComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-menu></app-menu>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MossyMovies';\n}\n","import { NgModule } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatListModule,\n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatInputModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatInputModule,\n    TextFieldModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatInputModule,\n    TextFieldModule\n  ]\n})\nexport class AppMaterialModule { }\n","import { environment } from '../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { MovieListTileComponent } from './movie-list-tile/movie-list-tile.component';\nimport { AppMaterialModule } from './app.material.module';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MovieSearchComponent } from './movie-search/movie-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesListComponent,\n    MovieListTileComponent,\n    MovieDetailComponent,\n    MenuComponent,\n    MovieSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TextFieldModule,\n    AppMaterialModule\n  ],\n  providers: [\n    { provide: 'ApiKey', useValue: environment.apiKey },\n    { provide: 'BaseRoute', useValue: environment.baseRoute },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-toolbar color=\\\"secondary\\\">\\n  <mat-toolbar-row>\\n    <div>\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"menuDrawer.toggle()\\\" color=\\\"primary\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<mat-sidenav-container color=\\\"secondary\\\" class=\\\"app-menu\\\" [hasBackdrop]=\\\"true\\\">\\n  <mat-sidenav #menuDrawer closed mode=\\\"side\\\" role=\\\"navigation\\\">\\n    <mat-list *ngFor=\\\"let menuItem of menuItems\\\">\\n      <mat-list-item routerLink='../{{menuItem.Route}}'>\\n        <mat-icon mat-list-icon color=\\\"primary\\\">{{menuItem.Icon}}</mat-icon>\\n        <p mat-line>{{menuItem.SectionName}}</p>\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n    </mat-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \".app-menu {\\n  height: 100%; }\\n\\n.mat-list-item {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3NlcGhtb3NzL0RvY3VtZW50cy9fRGV2L01vc3NNb3ZpZXMvc3JjL2FwcC9tZW51L21lbnUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tZW51L21lbnUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXBwLW1lbnUge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tYXQtbGlzdC1pdGVtIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubWF0LXRvb2xiYXIge1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  menuItems: any[] = [\n    {\n      SectionName: 'Home',\n      Route: 'search',\n      Icon: 'home'\n    },\n    {\n      SectionName: 'Current Movies',\n      Route: 'movies/current',\n      Icon: 'new_releases'\n    }\n  ];\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<button mat-button routerLink=\\\"/movies\\\">\\n  <mat-icon>arrow_back</mat-icon>\\n</button>\\n\\n<ng-container *ngIf=\\\"$movie\\\">\\n  <mat-card class=\\\"movie-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"header-image\\\"></div>\\n      <mat-card-title>{{$movie.title}}</mat-card-title>\\n    </mat-card-header>\\n\\n    <mat-card-content>\\n      <img id=\\\"movie_detail-image\\\" mat-card-image src=\\\"http://image.tmdb.org/t/p/w185//{{$movie.poster_path}}\\\" alt=\\\"Movie icon\\\">\\n\\n      <p id=\\\"movie_detail-overview\\\">\\n        {{$movie.overview}}\\n      </p>\\n    </mat-card-content>\\n  </mat-card>\\n\\n  <ng-container *ngIf=\\\"$recommendedMovies\\\">\\n    <!-- TODO: Add a call to get movies of a similar time, genre, rating -->\\n  </ng-container>\\n</ng-container>\"","module.exports = \".header-image {\\n  background-image: url(\\\"https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg\\\");\\n  background-size: cover; }\\n\\n.movie-card {\\n  height: 800px; }\\n\\n#movie_detail-image {\\n  margin: 10px;\\n  margin-top: 0;\\n  width: calc(20%);\\n  min-width: 50px;\\n  max-width: 150px;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3NlcGhtb3NzL0RvY3VtZW50cy9fRGV2L01vc3NNb3ZpZXMvc3JjL2FwcC9tb3ZpZS1kZXRhaWwvbW92aWUtZGV0YWlsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0pBQXdKO0VBQ3hKLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLGFBQWEsRUFBQTs7QUFHZjtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW92aWUtZGV0YWlsL21vdmllLWRldGFpbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3d3dy50aGVtb3ZpZWRiLm9yZy9hc3NldHMvMi92NC9sb2dvcy9wcmltYXJ5LWdyZWVuLWQ3MGVlYmUxOGE1ZWI1YjE2NmQ1YzFlZjA3OTY3MTViOGQxYTJjYmM2OThmOTZkMzExZDYyZjg5NGFlODcwODUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ubW92aWUtY2FyZCB7XG4gIGhlaWdodDogODAwcHg7XG59XG5cbiNtb3ZpZV9kZXRhaWwtaW1hZ2Uge1xuICBtYXJnaW46IDEwcHg7XG4gIG1hcmdpbi10b3A6IDA7XG4gIHdpZHRoOiBjYWxjKDIwJSk7XG4gIG1pbi13aWR0aDogNTBweDtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogicService } from 'src/services/logic.service';\nimport { Movie } from 'src/models/movie.model';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.scss']\n})\nexport class MovieDetailComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private logicService: LogicService\n  ) { }\n\n  $movieId: string;\n  $movie: Observable<Movie>;\n  $recommendedMovies: Observable<Movie>;\n\n  ngOnInit() {\n    this.$movieId = this.route.snapshot.paramMap.get('movieId');\n\n    this.logicService.getMovie(this.$movieId).subscribe((response) => {\n      this.$movie = response;\n    });\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"movie-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"header-image\\\"></div>\\n    <mat-card-title>{{movieBrief(movie.title, 10)}}</mat-card-title>\\n  </mat-card-header>\\n\\n  <img mat-card-image src=\\\"{{moviePoster(movie.poster_path)}}\\\" alt=\\\"Movie icon\\\">\\n\\n  <mat-card-content>\\n    <p>\\n      {{movieBrief(movie.overview)}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <!-- Could just pass the movie object, but wanted to demo the other API call and routing. -->\\n    <button mat-button routerLink=\\\"/movie/detail/{{movie.id}}\\\">DETAILS</button>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \".header-image {\\n  background-image: url(\\\"https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg\\\");\\n  background-size: cover; }\\n\\n.movie-card {\\n  height: 520px;\\n  width: 200px;\\n  margin: 20px;\\n  float: left; }\\n\\n.mat-card-image {\\n  margin: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3NlcGhtb3NzL0RvY3VtZW50cy9fRGV2L01vc3NNb3ZpZXMvc3JjL2FwcC9tb3ZpZS1saXN0LXRpbGUvbW92aWUtbGlzdC10aWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0pBQXdKO0VBQ3hKLHNCQUFzQixFQUFBOztBQUd4QjtFQUNJLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtFQUNaLFdBQVcsRUFBQTs7QUFHZjtFQUNJLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vdmllLWxpc3QtdGlsZS9tb3ZpZS1saXN0LXRpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyLWltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudGhlbW92aWVkYi5vcmcvYXNzZXRzLzIvdjQvbG9nb3MvcHJpbWFyeS1ncmVlbi1kNzBlZWJlMThhNWViNWIxNjZkNWMxZWYwNzk2NzE1YjhkMWEyY2JjNjk4Zjk2ZDMxMWQ2MmY4OTRhZTg3MDg1LnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLm1vdmllLWNhcmQge1xuICAgIGhlaWdodDogNTIwcHg7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIG1hcmdpbjogMjBweDtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuLm1hdC1jYXJkLWltYWdlIHtcbiAgICBtYXJnaW46IG5vbmU7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Movie } from 'src/models/movie.model';\n\n@Component({\n  selector: 'app-movie-list-tile',\n  templateUrl: './movie-list-tile.component.html',\n  styleUrls: ['./movie-list-tile.component.scss']\n})\nexport class MovieListTileComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() movie: Movie;\n\n  ngOnInit() {\n  }\n\n  moviePoster(image: string) {\n\n    if (image) {\n      return 'http://image.tmdb.org/t/p/w185//' + image;\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return 'https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg';\n  }\n\n  movieBrief(overview: string, maxLength: number): string {\n\n    if (!overview) {\n      return null;\n    }\n\n    if (!maxLength) {\n      maxLength = 100;\n    }\n\n    if (overview.length > maxLength) {\n      return overview.substr(0, maxLength) + '...';\n    }\n\n    return overview;\n  }\n}\n","module.exports = \"<div class=\\\"search-container\\\">\\n  <mat-form-field class=\\\"search-form\\\">\\n    <input class=\\\"search-bar\\\" matInput type=\\\"text\\\" placeholder=\\\"e.g. Mulan\\\" [(ngModel)]=\\\"searchText\\\"\\n      (keyup.enter)=\\\"searchMovies()\\\">\\n    <button mat-button *ngIf=\\\"searchText\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n\\n  <button mat-button type=\\\"button\\\" (click)=\\\"searchMovies()\\\">\\n    <mat-icon>search</mat-icon>\\n  </button>\\n\\n  <!-- \\n    I know this is an odd implementation of \\\"current movies\\\" but... time. \\n    Also I know this flashes up even when returning results. Would be resolved by\\n    making hasSearched an observable based on the API call.\\n  -->\\n  <ng-container *ngIf=\\\"!$movies && hasSearched\\\">\\n    <div>\\n      <p>No results returned, why don't you check out...</p>\\n      <button mat-raised-button type=\\\"button\\\" routerLink=\\\"../movies/current\\\">\\n        Current Movies\\n      </button>\\n    </div>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"$movies\\\">\\n  <ng-container *ngFor=\\\"let movie of $movies\\\">\\n    <app-movie-list-tile [movie]=\\\"movie\\\"></app-movie-list-tile>\\n  </ng-container>\\n</ng-container>\"","module.exports = \".search-container {\\n  text-align: center; }\\n\\n.search-form {\\n  width: 30%; }\\n\\n.search-bar {\\n  width: 50%;\\n  margin: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3NlcGhtb3NzL0RvY3VtZW50cy9fRGV2L01vc3NNb3ZpZXMvc3JjL2FwcC9tb3ZpZS1zZWFyY2gvbW92aWUtc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksVUFBVSxFQUFBOztBQUdkO0VBQ0UsVUFBVTtFQUNWLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vdmllLXNlYXJjaC9tb3ZpZS1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWNvbnRhaW5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2VhcmNoLWZvcm0ge1xuICAgIHdpZHRoOiAzMCU7XG59XG5cbi5zZWFyY2gtYmFyIHtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiBhdXRvO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LogicService } from 'src/services/logic.service';\nimport { Observable } from 'rxjs';\nimport { Movie } from 'src/models/movie.model';\n\n@Component({\n  selector: 'app-movie-search',\n  templateUrl: './movie-search.component.html',\n  styleUrls: ['./movie-search.component.scss']\n})\nexport class MovieSearchComponent implements OnInit {\n\n  constructor(private logicService: LogicService) { }\n\n  $movies: Observable<Movie[]>;\n  searchText: string;\n  hasSearched = false;\n\n  ngOnInit() {\n  }\n\n  searchMovies() {\n    this.hasSearched = true;\n\n    if (!this.searchText) {\n      return;\n    }\n\n    this.logicService.search(this.searchText).subscribe((response) => {\n      if (response && response.results.length > 0) {\n        this.$movies = response.results;\n      } else {\n        this.$movies = null;\n      }\n    });\n  }\n\n  getCurrentMovies() {\n    this.logicService.getCurrentMovies().subscribe((response) => {\n      this.$movies = response.results;\n    });\n  }\n\n  clearSearch() {\n    this.$movies = null;\n    this.searchText = null;\n  }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"$movies\\\">\\n  <ng-container *ngFor=\\\"let movie of $movies\\\">\\n    <app-movie-list-tile [movie]=\\\"movie\\\"></app-movie-list-tile>\\n  </ng-container>\\n</ng-container>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy1saXN0L21vdmllcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Movie } from 'src/models/movie.model';\nimport { LogicService } from 'src/services/logic.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.scss']\n})\nexport class MoviesListComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private logicService: LogicService\n  ) { }\n\n  $movies: Observable<Movie[]>;\n\n  ngOnInit() {\n    const movieListType = this.route.snapshot.paramMap.get('list');\n\n    this.logicService.getMoviesByList(movieListType).subscribe((response) => {\n      this.$movies = response.results;\n    });\n  }\n}\n","export enum MovieLists {\n    current = 'Current',\n    something = 'Something'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: '?api_key=82d8fc5e5d0be14a733eaeb4c28e23ce',\n  baseRoute: 'https://api.themoviedb.org/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Movie {\n    adult: boolean;\n    id: string;\n    title: string;\n    overview: string;\n    poster_path: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { MoviesService } from './movies.service';\nimport { MovieLists } from '../config/movie-lists';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LogicService {\n\n    constructor(private moviesService: MoviesService) {\n    }\n\n    getMoviesByList(listType: string) {\n        const listEnum = MovieLists[listType];\n\n        switch (listEnum) {\n            case MovieLists.current:\n                return this.getCurrentMovies();\n\n            default:\n                return null;\n        }\n    }\n\n    // Search for movies.\n    search(searchTerm: string): Observable<any> {\n        searchTerm = this.hughBeGone(searchTerm);\n\n        return this.moviesService.searchMovies(searchTerm).pipe(\n            map(response => {\n                return response;\n            })\n        );\n    }\n\n    // Get movies currently in the theatre.\n    getCurrentMovies(): Observable<any> {\n        return this.moviesService.getCurrentMovies().pipe(\n            map(response => {\n                return response;\n            })\n        );\n    }\n\n    // Get an individual movie.\n    getMovie(id: string): Observable<any> {\n        return this.moviesService.getMovie(id).pipe(\n            map(response => {\n                return response;\n            })\n        );\n    }\n\n    // Dude has no place in movies.\n    hughBeGone(searchTerm: string): string {\n        const hughCheck = searchTerm.toLocaleLowerCase();\n\n        if (hughCheck.includes('hugh') && hughCheck.includes('grant')) {\n            searchTerm = 'Mulan'; // thank me later => *spoilers*.... she saves China\n        }\n\n        return searchTerm;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Movie } from '../models/movie.model';\nimport { MovieSearchResponse } from '../models/movie-search.response';\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MoviesService {\n\n    baseRoute: string;\n    apiKey: string;\n\n    // injecting the env values is useful if you're producing multiple modules, sharing the same values,\n    // rather than just import env ts files.\n    constructor(\n        private http: HttpClient,\n        @Inject('BaseRoute') baseRoute: string,\n        @Inject('ApiKey') apiKey: string\n    ) {\n        this.baseRoute = baseRoute;\n        this.apiKey = apiKey;\n    }\n\n    // example req: https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n    searchMovies(searchTerm: string): Observable<MovieSearchResponse> {\n        const route = this.baseRoute + '3/search/movie' + this.apiKey + '&query=' + encodeURI(searchTerm);\n\n        return this.http.get<MovieSearchResponse>(route)\n            .pipe(\n                map(response => {\n                    return response;\n                }),\n                catchError(error => {\n                    throw Error('Err: ' + error);\n                })\n            );\n    }\n\n    // example req: https://api.themoviedb.org/3/movie/now_playing?api_key=82d8fc5e5d0be14a733eaeb4c28e23ce&language=en-US&page=1\n    getCurrentMovies(): Observable<MovieSearchResponse> {\n        const route = this.baseRoute + '3/movie/now_playing' + this.apiKey;\n\n        return this.http.get<MovieSearchResponse>(route)\n            .pipe(\n                map(response => {\n                    return response;\n                }),\n                catchError(error => {\n                    throw Error('Err: ' + error);\n                })\n            );\n    }\n\n    // example req: https://api.themoviedb.org/3/movie/550?api_key=82d8fc5e5d0be14a733eaeb4c28e23ce\n    getMovie(id: string): Observable<Movie> {\n        const route = this.baseRoute + '3/movie/' + id + this.apiKey;\n\n        return this.http.get<Movie>(route)\n            .pipe(\n                map((response: Movie) => {\n                    return response;\n                }),\n                catchError(error => {\n                    throw Error('Err: ' + error);\n                })\n            );\n    }\n}\n"],"sourceRoot":""}